1. day2 review
(1) 주석(comment)
    - 사람만 알아볼 수 있도록 작성하는 텍스트
    - 한 줄 주석(#), 범위 주석(""")이 있음

(2) 입출력함수
    - print(var) : var를 화면에 출력함
    - input(var) : var를 화면에 출력하고 사용자의 입력을 기다림
    - int() : 정수 숫자로 바꾸는 함수(cf. float())

(3) 연산자
    - 산술연산자 : +-*/(사칙연산), //(몫), %(나머지)
    - 관계(비교)연산자 : >, >=, ==(같은가?), !=(다른가?)
    - 논리연산자 : and(그리고), or(또는), not(반대)
    * 관계연산자와 논리연산자의 결과는 bool(True 또는 False)

* 수업 외 참고사항
  python을 설치할 때는 되도록 기본 디렉토리를 사용
  작업 디렉토리를 만들 때는 가급적 공백 없이 만들 것
  파일 만들 때 파일 이름에 공백 사용하지 않을 것.
  (공백을 사용하면 명령이 python day 1.py로 실행되어 day가 뭔데이?)


2. print 하나 더(str.format 알아보기)
(1) str이 가지고 있는 메서드(method) 중 format 함수 써보기
(2) 파이썬 레퍼런스 매뉴얼 사이트 접속
    1) www.python.org 접속
    2) docs 클릭
    3) 필요시 좌측 상단의 korean을 선택(Optional)
    4) str 검색
    5) str.format() 부분 찾기
    6) Format String Syntax 클릭
    7) Format Examples 클릭
    8) 예제를 통해 익히기


3. 제어문(Control Statement) 교재 88p ~ 143p
   - 프로그래밍 언어에서 실행 순서를 변경하거나,
     조건에 따라 실행해야 할 명령문을 제어하는데 사용되는 구문
   - 일반적으로 프로그램은 위에서 아래로 순차적으로 실행되지만,
     어떤 조건에서나 실행하는 경우, 특정 부분을 반복해서 실행하는 경우가 있습니다.
   - 제어문의 종류
     조건문, 반복문, 기타 제어문이 있음
     조건문 : if, elif, 삼항연산자
     반복문 : while, for
     기타제어문 : break, continue

(1) 조건문
   - "조건에 따라 다른 것"을 구현하는 문장
   - 조건에 따라서 해야할 일이 다를 때 사용
   - if, if-else, if-elif, if-elif-else

   1) if
   if 조건:
      조건의 결과가 True일 때 실행할 문장

   a = 1
   if a > 0:
      print("a는 양수")

   2) if-else
   if 조건:
      조건의 결과가 True일 때 실행할 문장
   else:
      조건의 결과가 False일 때 실행할 문장

   b = -1
   if b > 0:
      print("b는 양수")
   else:
      print("b는 양수가 아님")

   3) if-elif
   if 조건1:
      조건1의 결과가 True일 때 실행할 문장
   elif 조건2:
      조건1은 False고 조건2의 결과가 True일 때 실행할 문장

   cf)
   if 조건1:
   elif 조건2: #조건1이 True이면 조건2를 검사하지 않는다

   if 조건1:
   if 조건2:   #조건1에 관계없이 조건2를 검사한다.

   조건1이 발생하면 조건2가 발생하지 않는 경우라면, 성능 차이가 납니다.

   4) if-elif-else
   if 조건1:
      조건1이 True일 때 실행할 문장
   elif 조건2:
      조건1은 False이고 조건2가 True일 때 실행할 문장
   elif 조건3:
      조건1,2가 모두 False이고 조건3이 True일 때 실행할 문장
   else:
      조건1,2,3이 모두 False일 때 실행할 문장

   cf ) C나 Java는 모두 if, else if, else
